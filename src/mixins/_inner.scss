@mixin inner(
  $bp1: "help",
  $bp2: null null null,
  $bp3: null null null,
  $bp4: null null null) {

  // Help / Documentation
  @if ($bp1 == "help") {
    @debug "
  @params(
    $padding $maxWidth,
    $padding $breakpoint $maxWidth,
    $padding $breakpoint $maxWidth,
    $padding $breakpoint $maxWidth)

  @usage
    @include inner(10px 900px, 20px 768px);
    @include inner(null 900px, 20px 768px);
    @include inner(15px 400px, 20px 768px 600px, 20px 1024px 900px, 20px 1440px 1200px);
  "
  } @else {
    // Initial styling
    margin-left: auto;
    margin-right: auto;
    @if (length($bp1) == 2) {
      // If there's something in the first and there's 2 variables
      @if nth($bp1, 2) != null {
        max-width: nth($bp1, 2);
      }
      @if nth($bp1, 1) != null {
        padding-left: nth($bp1, 1);
        padding-right: nth($bp1, 1);
      }
    } @else {
      // If there's 1 variables, output a warning
      @warn "
        Please add 2 or 3 variables into the second param.
        Params: { $padding $breakpoint (optional: $maxWidth) }
                             ✖ <-- Second param
        @include inner($bp1, $bp2, $bp3, $bp4)
      ";
    }

    @if $bp2 != null {
      // If there's something in the sescond param
      @if length($bp2) == 3 {
        // If there's 3 variables
        @media (min-width: nth($bp2, 2)) {
          max-width: nth($bp2, 3);
          @if (nth($bp2, 1) != null) {
            padding-left: nth($bp2, 1);
            padding-right: nth($bp2, 1);
          }
        }
      } @else if length($bp2) == 2 {
        // If there's 2 variables
        @media (min-width: nth($bp2, 2)) {
          @if (nth($bp2, 1) != null) {
            padding-left: nth($bp2, 1);
            padding-right: nth($bp2, 1);
          }
        }
      } @else {
        // If there's 1 variables, output a warning
        @warn "
        Please add 2 or 3 variables into the second params.
        Params: { $padding $breakpoint (optional: $maxWidth) }
                             ✖
        @include inner($bp2, $bp3, $bp4, $bp4)
      ";
      }
    }

    @if $bp3 != null {
      // If there's something in the third param
      @if length($bp3) == 3 {
        // If there's 3 variables
        @media (min-width: nth($bp3, 2)) {
          max-width: nth($bp3, 3);
          @if (nth($bp3, 1) != null) {
            padding-left: nth($bp3, 1);
            padding-right: nth($bp3, 1);
          }
        }
      } @else if length($bp3) == 2 {
        // If there's 2 variables
        @media (min-width: nth($bp3, 2)) {
          @if (nth($bp3, 1) != null) {
            padding-left: nth($bp3, 1);
            padding-right: nth($bp3, 1);
          }
        }
      } @else {
        // If there's 1 variables, output a warning
        @warn "
        Please add 2 or 3 variables into the third params.
        Params: { $padding $breakpoint (optional: $maxWidth) }
                                   ✖
        @include inner($bp2, $bp3, $bp4, $bp4)
      ";
      }
    }

    @if $bp4 != null {
      // If there's something in the forth param
      @if length($bp4) == 3 {
        // If there's 3 variables
        @media (min-width: nth($bp4, 2)) {
          max-width: nth($bp4, 3);
          @if (nth($bp4, 1) != null) {
            padding-left: nth($bp4, 1);
            padding-right: nth($bp4, 1);
          }
        }
      } @else if length($bp4) == 2 {
        // If there's 2 variables
        @media (min-width: nth($bp4, 2)) {
          @if (nth($bp4, 1) != null) {
            padding-left: nth($bp4, 1);
            padding-right: nth($bp4, 1);
          }
        }
      } @else {
        // If there's 1 variables, output a warning
        @warn "
        Please add 2 or 3 variables into the forth params.
        Params: { $padding $breakpoint (optional: $maxWidth) }
                                         ✖
        @include inner($bp2, $bp3, $bp4, $bp4)
      ";
      }
    }
  }
}