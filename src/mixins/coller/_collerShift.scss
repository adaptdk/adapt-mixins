/// This mixin creates columns with different width
// Author: Mads Thines

/// How to use (Everythings optional)
// @include collerShift(2 2 3, 2%, padding);
// Or
// @include collerShift(1 2, 2%, margin);
//
// Gives the output of amount of columns, separated by a specific type of spacing.
// The first is the total amount divided by it's value
// The second variable is spacing between,
// The third is whether the type of spacing which can either be margin or padding
//

@function sum($list) {
  $total: 0;
  @each $item in $list {
    $total: $total + $item;
  }
  @return $total;
}

@mixin collerShift($columnList: null, $spacing: null, $type: "padding") {
  > * {
    display: inline-block;
    vertical-align: top;

    @for $i from 1 through length($columnList) {
      @if $spacing != null {
        @if $type == "padding" {
          &:nth-child(#{$i}) {
            $width: (100% / sum($columnList)) * nth($columnList, $i);
            width: $width;
          }

          &:nth-child(1n+2) {
            padding-left: $spacing/2;
          }

          &:nth-last-child(1n+2) {
            padding-right: $spacing/2;
          }
        }

        @if $type == "margin" {
          &:nth-child(#{$i}) {
            $width: (100% / sum($columnList)) * nth($columnList, $i) - ((length($columnList) * $spacing - $spacing) / (length($columnList)));
            width: $width;
          }

          &:nth-child(1n+2) {
            margin-left: $spacing/2;
          }

          &:nth-last-child(1n+2) {
            margin-right: $spacing/2;
          }
        }
      }
    }
  }
}
